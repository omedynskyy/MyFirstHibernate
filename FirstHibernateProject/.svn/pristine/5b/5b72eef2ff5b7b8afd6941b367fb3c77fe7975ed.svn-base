package org.javabrains.koushik.dto;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.Enumeration;
import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

import javax.persistence.ElementCollection;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

public class HibernateTest {

	public static void main(String[] args) throws FileNotFoundException {
		
	//  ArrayList <Locations> myLocations = new ArrayList <Locations>();
	//	Locations homeLocation = new Locations();
	//	homeLocation.setCity("Hostomel");
	//	homeLocation.setComments("I live in Hostomel");
	//	homeLocation.setDistrict("Kyiv Oblast");

	//  Locations workLocation = new Locations();
	//	workLocation.setCity("kyiv");
	//	workLocation.setComments("I work in Kyiv");
	//	workLocation.setDistrict("Kyiv");
	
	//	myLocations.add(homeLocation);
	//	myLocations.add(workLocation);

	    UserLoader ldr = new UserLoader("D:\\users\\oleksandr.medynskyi\\workspace\\FirstHibernateProject\\src\\users.txt");

		SessionFactory sessionFactory = new Configuration().configure().buildSessionFactory();
		Session session = sessionFactory.openSession();
		
		session.beginTransaction(); 
		for(int i=0; i<ldr.getMyLocations().size(); i++){
	    	session.save(ldr.getMyLocations().get(i));
		}
		session.getTransaction().commit();
		
		session.beginTransaction(); 
		for(int i=0; i<ldr.getMyUsers().size(); i++){
	    	session.save(ldr.getMyUsers().get(i));
		}
		session.getTransaction().commit();
		session.close();
	    
	/*	
		UserDetails user = new UserDetails();

		user.setUserId(1);
		user.setUserName("First User");
		user.setJoinedDate(new Date());
		user.setDescription("Description 1");
		
		Address addr = new Address();
		addr.setCity("Kyiv");
		addr.setState("State");
		addr.setPincode("1234");
		
		Address addr2 = new Address();
		addr2.setStreet("Harkovskaya");
		addr2.setState("Kyiv");
		addr2.setPincode("5678");
		
		user.getListOfAddresses().add(addr);
		user.getListOfAddresses().add(addr2);
		*/
		

	}
}
